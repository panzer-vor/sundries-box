class In{
    a(){
        console.log('结果为1')
    }
    b(){
        console.log('结果为2')
    }
    c(){
        console.log('结果为3')
    }
}
let In1 = new In()
In1.a = function () {
    console.log('结果为0')
}
In1.a()
In1.b()
In1.c()


/* *
概念：
    定义了一个操作中的算法的骨架，而将一些步骤延迟到子类中。模板方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。
通俗的讲，就是将一些公共方法封装到父类，子类可以继承这个父类，并且可以在子类中重写父类的方法，从而实现自己的业务逻辑。
应用场景：
　　模板模式主要应用在一些代码刚开要一次性实现不变的部分。但是将来页面有修改，需要更改业务逻辑的部分或者重新添加新业务的情况。主要是通过子类来改写父类的情
况，其他不需要改变的部分继承父类。
* */